version: '3'
services:
  webapp:
    restart: always
    build: ./webapp
    ports:
      - 8081:5000
    volumes:
      - ./webapp:/code
  user_auth_api:
    restart: always
    build: ./microservices/user_auth
    ports:
      - 12001:3000
    volumes:
      - ./microservices/user_auth:/code
  user_auth_mongo:
    image: mongo
    #ports:
     # - 12102:27017
    volumes:
      - user_auth_mongodb:/data/db
  restaurant_auth_api:
    restart: always
    build: ./microservices/restaurant_auth
    ports:
      - 12002:3000
    volumes:
      - ./microservices/user_auth:/code
  restaurant_auth_mongo:
    image: mongo
    volumes:
      - restaurant_auth_mongodb:/data/db
  restaurant_data_api:
    restart: always
    build: ./microservices/restaurant_data
    ports:
      - 12003:3000
    volumes:
      - ./microservices/restaurant_data:/code
  restaurant_data_mongo:
    image: mongo
    volumes:
      - restaurant_data_mongodb:/data/db
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./benchmarks/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
    - cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 9091:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - webapp
    - user_auth_api
    - user_auth_mongo
    - restaurant_auth_api
    - restaurant_auth_mongo
    - restaurant_data_api
    - restaurant_data_mongo
volumes:
  user_auth_mongodb:
  restaurant_auth_mongodb:
  restaurant_data_mongodb: